
services:
  # Frontend with your custom UI
  pen-front-end:
    image: nginxinc/nginx-unprivileged:alpine
    ports:
      - "9091:8080"
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html:ro  # Serve your UI
    networks:
      - pen-shop-network
    depends_on:
      - pen-catalogue
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Main MongoDB instance
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - pen-shop-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Separate MongoDB for pen-catalogue
  pen-catalogue-db:
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - pen_catalogue_db_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - pen-shop-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MCP Gateway
  mcp-gateway:
    image: docker/mcp-gateway:latest
    ports:
      - "8811:8811"
    networks:
      - pen-shop-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8811/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Pen Catalogue Service
  pen-catalogue:
    build:
      context: .
      dockerfile: pen-catalogue/Dockerfile
    image: pen-shop-demo-pen-catalogue
    ports:
      - "8081:3001"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password@pen-catalogue-db:27017/pen-catalogue?authSource=admin
    networks:
      - pen-shop-network
    depends_on:
      pen-catalogue-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ADK Service
  adk:
    build:
      context: .
      dockerfile: adk/Dockerfile
    image: pen-shop-demo-adk
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
    networks:
      - pen-shop-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ADK UI Service
  adk-ui:
    build:
      context: .
      dockerfile: adk-ui/Dockerfile
    image: pen-shop-demo-adk-ui
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8000
    networks:
      - pen-shop-network
    depends_on:
      - adk
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  pen-shop-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  pen_catalogue_db_data:
    driver: local
